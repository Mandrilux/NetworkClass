#!/usr/bin/env python3                                                    
# -*- coding: latin-1 -*-                                                 

try:
    import sys, math
except:
    print ("Error: Cannot load lib 'sys' or math", file=sys.stderr)
    sys.exit(84)

def usage():
    print ("USAGE")
    print("\tnetwork [network] [nbIP subnet 1] [nbIP subnet 2]...")
    sys.exit(84)

def is_network(network):
    test = network.split('.')
    if len (test) == 4:
        try:
            nb = [int(z) for z in test]
        except ValueError:
            return False
        if nb[0] <= 255 and nb[1] <= 255 and nb[2] <= 255 and nb[3] <= 255:
            return True
        else:
            return False
    else:
        return False

def networking(limit):
    test = Ni[0].split('.')
    test[Ni[5]] =   int(test[Ni[5]]) + 1
    tmp = str(test[0]) + "." + str(test[1]) + "." + str(test[2]) + "." + str(test[3])
    print ("1 Host  : %s" %tmp)
    test[Ni[5]] = limit - 1
    tmp = str(test[0]) + "." + str(test[1]) + "." + str(test[2]) + "." + str(test[3])
    print ("Last Host : %s" %tmp)
    test[Ni[5]] = limit
    tmp = str(test[0]) + "." + str(test[1]) + "." + str(test[2]) + "." + str(test[3])
    print ("Broadcast : %s" %tmp)
def getMaskSub(NbHost):
    ref = 0
    i = 0
    while (ref < NbHost):
        ref = math.pow(2, i)
        if (i >= 2):
            ref -= 2
        i += 1
    test = Ni[2].split('.')
    value = int(256 - math.pow(2, i - 1))
    for k in range (0, len(test)):
        if (int(test[k]) != 255):
            test[k] = value
            break
    tmp = str(test[0] +"." +str(test[1]) +"." +str(test[2]) + "." +str(test[3]))
    print ("Netmask : %s" %tmp)
    print ("Network : %s" %Ni[0])
    networking(int(math.pow(2, i -1) - 1))
    
def getNetmask():
    test = Ni[0].split('.')
    if (int(test[0]) < 128):
        Ni.append("A")
        Ni.append("255.0.0.0")
        Ni.append("/8")
        Ni.append(pow(2,32 - 8))
        Ni.append(1)
    elif (int (test[0]) >= 128 and int(test[0]) < 192):
        Ni.append("B")
        Ni.append("255.255.0.0")
        Ni.append("/16")
        Ni.append(pow(2, 32 - 16))
        Ni.append(2)
    else:
        Ni.append("C")
        Ni.append("255.255.255.0")
        Ni.append("/24")
        Ni.append(pow(2,32 - 24))
        Ni.append(3)
        
def getNbsubnet():
    try:
        tmp = int (sys.argv[2])
    except ValueError:
        print ("Error: invalid number of subnet", file=sys.stderr)
        sys.exit(84)
    return  tmp

def getArgument():
    for i in range (2, len(sys.argv)):
        try:
            tmp = int (sys.argv[i])
            l.append(tmp)
        except ValueError:
            print ("Error: invalid number of client in subnet ID#%d" %(i - 2), file=sys.stderr)
            exit (84)
    if (sum(l) > Ni[4] - 2):
        print("Error : More client for this network")
        exit(84)
def calcSubnet(subnet, i):
    print ("------------------------------------------------")
    print ("Subnet#%d -> %s hosts" %(i, subnet))
    getMaskSub(subnet)
    print ("------------------------------------------------")
    
def initNetwork():
    print ("################################################")
    print ("Network : %s" % Ni[0])
    print ("Netmask : %s" % Ni[2])
    print ("Class   : %s" % Ni[1])
    print ("CIDR    : %s" % Ni[3])
    print ("IP Avail: %s" % Ni[4])
    print ("################################################")
    print ("")

if __name__ == '__main__':
    if (len(sys.argv) < 3):
        usage()
    l = []
    Ni = []
    Ni.append(sys.argv[1])
    if (is_network(Ni[0]) != True):
        print ("Error : Bad network", file=sys.stderr)
        exit (84)
    getNetmask()
    getArgument()
    initNetwork()
    l.sort(reverse=True)
    for i in range (0, len(l)):
        calcSubnet(l[i], i+ 1)
